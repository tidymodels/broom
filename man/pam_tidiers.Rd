% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pam_tidiers.R
\name{pam_tidiers}
\alias{pam_tidiers}
\alias{tidy.pam}
\alias{augment.pam}
\alias{glance.pam}
\title{Tidying methods for pam objects}
\usage{
\method{tidy}{pam}(x, col.names = paste0("x", 1:ncol(x$medoids)), ...)

\method{augment}{pam}(x, data, ...)

\method{glance}{pam}(x, ...)
}
\arguments{
\item{x}{pam object}

\item{col.names}{The names to call each dimension of the data in \code{tidy}.
Defaults to \code{x1, x2...}}

\item{...}{extra arguments, not used}

\item{data}{Original data (required for \code{augment})}
}
\value{
All tidying methods return a \code{data.frame} without rownames.
The structure depends on the method chosen.

\code{tidy} returns one row per cluster, with one column for each
dimension in the data describing the center, followed by
  \item{size}{The size of each cluster}
  \item{max_diss}{The maximal dissimilarity between the observations in the cluster and the cluster's medoid}
  \item{av_diss}{The average dissimilarity between the observations in the cluster and the cluster's medoid}
  \item{diamter}{The diameter of the cluster}
  \item{separation}{The separation of the cluster}
  \item{avg.width}{The average silhouette width of the cluster}
  \item{cluster}{A factor describing the cluster from 1:k}

\code{augment} returns the original data with one extra column:
  \item{.cluster}{The cluster assigned by the pam algorithm}

\code{glance} returns a one-row data.frame with the columns
  \item{avg.width}{The average silhouette width for the dataset}
}
\description{
These methods summarize the results of Partitioning Around Medoids (PAM) clustering into three
tidy forms. \code{tidy} describes the medoid and size of each cluster,
\code{augment} adds the cluster assignments to the original data, and
\code{glance} summarizes the average silhouette with of the clustering.
}
\examples{

library(dplyr)
library(ggplot2)
library(cluster)

set.seed(2014)
centers <- data.frame(cluster=factor(1:3), size=c(100, 150, 50),
                      x1=c(5, 0, -3), x2=c(-1, 1, -2))
points <- centers \%>\% group_by(cluster) \%>\%
 do(data.frame(x1=rnorm(.$size[1], .$x1[1]),
               x2=rnorm(.$size[1], .$x2[1])))

p <- pam(points[,c("x1","x2")], 3)
tidy(p)
head(augment(p, points))
glance(p)

ggplot(augment(p, points), aes(x1, x2)) +
    geom_point(aes(color = .cluster)) +
    geom_text(aes(label = cluster), data = tidy(p), size = 10)

}
\seealso{
\code{\link{pam}}
}
