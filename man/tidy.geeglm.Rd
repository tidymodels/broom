% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geepack-tidiers.R
\name{tidy.geeglm}
\alias{tidy.geeglm}
\alias{geeglm_tidiers}
\alias{geepack_tidiers}
\title{Tidy a(n) geeglm object}
\usage{
\method{tidy}{geeglm}(x, conf.int = FALSE, conf.level = 0.95,
  exponentiate = FALSE, ...)
}
\arguments{
\item{x}{A \code{geeglm} object returned from a call to \code{\link[geepack:geeglm]{geepack::geeglm()}}.}

\item{conf.int}{Logical indicating whether or not to include a confidence
interval in the tidied output. Defaults to \code{FALSE}.}

\item{conf.level}{The confidence level to use for the confidence interval
if \code{conf.int = TRUE}. Must be strictly greater than 0 and less than 1.
Defaults to 0.95, which corresponds to a 95 percent confidence interval.}

\item{exponentiate}{Logical indicating whether or not to exponentiate the
the coefficient estimates. This is typical for logistic and multinomial
regressions, but a bad idea if there is no log or logit link. Defaults
to \code{FALSE}.}

\item{...}{Additional arguments. Not used. Needed to match generic
signature only. \strong{Cautionary note:} Misspelled arguments will be
absorbed in \code{...}, where they will be ignored. If the misspelled
argument has a default value, the default value will be used.
For example, if you pass \code{conf.lvel = 0.9}, all computation will
proceed using \code{conf.level = 0.95}. Additionally, if you pass
\code{newdata = my_tibble} to an \code{\link[=augment]{augment()}} method that does not
accept a \code{newdata} argument, it will use the default value for
the \code{data} argument.}
}
\description{
Tidy summarizes information about the components of a model.
A model component might be a single term in a regression, a single
hypothesis, a cluster, or a class. Exactly what tidy considers to be a
model component varies cross models but is usually self-evident.
If a model has several distinct types of components, you will need to
specify which components to return.
}
\details{
If \code{conf.int = TRUE}, the confidence interval is computed with
the an internal \code{confint.geeglm()} function.

If you have missing values in your model data, you may need to
refit the model with \code{na.action = na.exclude} or deal with the
missingness in the data beforehand.
}
\examples{

library(geepack)
data(state)
  
ds <- data.frame(state.region, state.x77)

geefit <- geeglm(Income ~ Frost + Murder, id = state.region,
                 data = ds, family = gaussian,
                 corstr = "exchangeable")

tidy(geefit)
tidy(geefit, conf.int = TRUE)

}
\seealso{
\code{\link[=tidy]{tidy()}}, \code{\link[geepack:geeglm]{geepack::geeglm()}}
}
\value{
A \code{\link[tibble:tibble]{tibble::tibble()}} with columns:
  \item{regresion}{TRUE}

}
